#!/usr/bin/env ruby
require 'rubygems'
require 'commander/import'
require 'filmrolls'

begin
  GEMSPEC  = Gem::Specification.find_by_name('filmrolls')
  SPECFILE = GEMSPEC.loaded_from
rescue Gem::LoadError
  SPECFILE = File.expand_path(File.dirname(__FILE__) + '/../filmrolls.gemspec')
  GEMSPEC  = Gem::Specification.load(SPECFILE)
end

program :version,     GEMSPEC.version.to_s
program :description, GEMSPEC.summary

global_option '-r', '--rolls FILE', 'Film Rolls XML file (default: stdin)'

command :list do |c|
  c.syntax      = 'filmrolls list --rolls FILE'
  c.summary     = 'List film rolls'
  c.description = 'List ID and additional data for all film rolls in xml-file.'

  c.action do |_args, options|
    begin
      xml = options.rolls.nil? ? $stdin.read : File.read(options.rolls)
    rescue SystemCallError => err
      abort "Could not read input XML: #{err.message}"
    end

    rolls =
      Filmrolls::XMLFormat.load(xml)[:rolls].map do |roll|
        roll.merge(
          frames: roll[:frames].length,
          unload: roll[:unload].to_date,
          load: roll[:load].to_date
        )
      end

    unless rolls.empty?
      require 'terminal-table'
      head = rolls.first.keys.map(&:capitalize)
      rows = rolls.map(&:values)
      say Terminal::Table.new(headings: head, rows: rows)
    end
  end
end
